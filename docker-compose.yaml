services:
  # Backend A Service
  backenda:
    build:
      context: .
      dockerfile: build/package/backenda/Dockerfile
    ports:
      - "60408:60408" # Ensure backenda.yaml configures to use port 60408
    networks:
      - reverse-proxy-net
    environment:
      - CONFIG_PATH=configs/backenda.yaml
    volumes:
      - ./configs:/app/configs # Mount configs to /app/configs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:60408/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend B Service
  backendb:
    build:
      context: .
      dockerfile: build/package/backendb/Dockerfile
    ports:
      - "60409:60409" # Ensure backendb.yaml configures to use port 60409
    networks:
      - reverse-proxy-net
    environment:
      - CONFIG_PATH=configs/backendb.yaml
    volumes:
      - ./configs:/app/configs # Mount configs to /app/configs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:60409/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Proxy Service
  proxy:
    build:
      context: .
      dockerfile: build/package/proxy/Dockerfile
    ports:
      - "8080:8080" # Ensure config.yaml configures to use port 8080
    depends_on:
      - backenda
      - backendb
    networks:
      - reverse-proxy-net
    environment:
      - CONFIG_PATH=configs/config.yaml
    volumes:
      - ./configs:/app/configs # Mount configs to /app/configs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Integration Tests Service
  # tests:
  #   build:
  #     context: .
  #     dockerfile: tests/Dockerfile
  #   depends_on:
  #     - proxy
  #     - backenda
  #     - backendb
  #   networks:
  #     - reverse-proxy-net
  #   environment:
  #     - CONFIG_PATH=configs/config.yaml
  #   volumes:
  #     - ./configs:/app/configs  # Mount configs to /app/configs
  #     - ./tests:/app/tests      # Mount tests to /app/tests
  #   entrypoint: ["/usr/local/bin/run-tests.sh"]

networks:
  reverse-proxy-net:
    driver: bridge
